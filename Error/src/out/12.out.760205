12: Hall.csv: none: {'count': 1290, 'truepos': 71, 'falseneg': 31, 'correction': 0, 'unknownyes': 2, 'falsepos': 5, 'unique': 1290}
12: Hall.csv: three: {'count': 1719, 'truepos': 83, 'falseneg': 19, 'correction': 32, 'unknownyes': 2, 'falsepos': 0, 'unique': 840}
12: Hall.csv: machine: {'count': 806, 'truepos': 90, 'falseneg': 12, 'correction': 29, 'unknownyes': 2, 'falsepos': 2, 'unique': 580}
12: Hall.csv: knee: {'count': 475, 'truepos': 72, 'falseneg': 25, 'correction': 17, 'unknownyes': 7, 'falsepos': 0, 'unique': 360}
12: Wahono.csv: none: {'count': 2050, 'truepos': 41, 'falseneg': 21, 'correction': 0, 'unknownyes': 0, 'falsepos': 1, 'unique': 2050}
12: Wahono.csv: three: {'count': 3099, 'truepos': 44, 'falseneg': 16, 'correction': 32, 'unknownyes': 2, 'falsepos': 0, 'unique': 1530}
12: Wahono.csv: machine: {'count': 1909, 'truepos': 51, 'falseneg': 10, 'correction': 18, 'unknownyes': 1, 'falsepos': 0, 'unique': 1360}
12: Wahono.csv: knee: {'count': 1352, 'truepos': 48, 'falseneg': 11, 'correction': 12, 'unknownyes': 3, 'falsepos': 0, 'unique': 1170}
12: Danijel.csv: none: {'count': 1480, 'truepos': 30, 'falseneg': 15, 'correction': 0, 'unknownyes': 3, 'falsepos': 5, 'unique': 1480}
12: Danijel.csv: three: {'count': 1958, 'truepos': 34, 'falseneg': 12, 'correction': 17, 'unknownyes': 2, 'falsepos': 0, 'unique': 970}
12: Danijel.csv: machine: {'count': 1716, 'truepos': 40, 'falseneg': 6, 'correction': 13, 'unknownyes': 2, 'falsepos': 0, 'unique': 1230}
12: Danijel.csv: knee: {'count': 930, 'truepos': 35, 'falseneg': 6, 'correction': 9, 'unknownyes': 7, 'falsepos': 0, 'unique': 670}
12: K_all3.csv: none: {'count': 560, 'truepos': 35, 'falseneg': 6, 'correction': 0, 'unknownyes': 4, 'falsepos': 2, 'unique': 560}
12: K_all3.csv: three: {'count': 1460, 'truepos': 31, 'falseneg': 13, 'correction': 34, 'unknownyes': 1, 'falsepos': 0, 'unique': 710}
12: K_all3.csv: machine: {'count': 583, 'truepos': 37, 'falseneg': 6, 'correction': 7, 'unknownyes': 2, 'falsepos': 2, 'unique': 420}
12: K_all3.csv: knee: 
------------------------------------------------------------
Sender: LSF System <lsfadmin@n2c1-14>
Subject: Job 760205: </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 12> in cluster <henry2> Exited

Job </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 12> was submitted from host <login01.hpc.ncsu.edu> by user <zyu9> in cluster <henry2> at Sun Feb 25 09:13:35 2018.
Job was executed on host(s) <2*n2c1-14>, in queue <single_chassis>, as user <zyu9> in cluster <henry2> at Sun Feb 25 09:13:42 2018.
</home/zyu9> was used as the home directory.
</home/zyu9/projects/MAR_HPC/Error/src> was used as the working directory.
Started at Sun Feb 25 09:13:42 2018.
Terminated at Sun Feb 25 10:22:29 2018.
Results reported at Sun Feb 25 10:22:29 2018.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
/share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 12
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   5385.60 sec.
    Max Memory :                                 286.39 MB
    Average Memory :                             230.47 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   1331 MB
    Max Processes :                              3
    Max Threads :                                8
    Run time :                                   4135 sec.
    Turnaround time :                            4134 sec.

The output (if any) is above this job summary.



PS: The stderr output (if any) follows:

Traceback (most recent call last):
  File "runner.py", line 352, in <module>
    eval(cmd())
  File "<string>", line 1, in <module>
  File "runner.py", line 292, in error_hpcc
    result = BM25(file,queries[file],'knee','random')
  File "runner.py", line 193, in BM25
    seq = coded[np.argsort(read.body['time'][coded])]
TypeError: only integer scalar arrays can be converted to a scalar index


PS:

Fail to open stderr file ./err/12.err.760205: No such file or directory.
The stderr output is included in this report.

