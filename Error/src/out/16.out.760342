16: Hall.csv: none: {'count': 1400, 'truepos': 71, 'falseneg': 32, 'correction': 0, 'unknownyes': 1, 'falsepos': 3, 'unique': 1400}
16: Hall.csv: three: {'count': 1402, 'truepos': 81, 'falseneg': 21, 'correction': 36, 'unknownyes': 2, 'falsepos': 0, 'unique': 680}
16: Hall.csv: machine: {'count': 963, 'truepos': 94, 'falseneg': 8, 'correction': 24, 'unknownyes': 2, 'falsepos': 3, 'unique': 600}
16: Hall.csv: knee: {'count': 620, 'truepos': 86, 'falseneg': 13, 'correction': 18, 'unknownyes': 5, 'falsepos': 1, 'unique': 430}
16: Wahono.csv: none: {'count': 1790, 'truepos': 36, 'falseneg': 24, 'correction': 0, 'unknownyes': 2, 'falsepos': 4, 'unique': 1790}
16: Wahono.csv: three: {'count': 2810, 'truepos': 42, 'falseneg': 18, 'correction': 26, 'unknownyes': 2, 'falsepos': 0, 'unique': 1390}
16: Wahono.csv: machine: {'count': 2801, 'truepos': 53, 'falseneg': 6, 'correction': 14, 'unknownyes': 3, 'falsepos': 8, 'unique': 1560}
16: Wahono.csv: knee: {'count': 785, 'truepos': 45, 'falseneg': 6, 'correction': 10, 'unknownyes': 11, 'falsepos': 0, 'unique': 610}
16: Danijel.csv: none: {'count': 2020, 'truepos': 34, 'falseneg': 13, 'correction': 0, 'unknownyes': 1, 'falsepos': 2, 'unique': 2020}
16: Danijel.csv: three: {'count': 3515, 'truepos': 38, 'falseneg': 9, 'correction': 33, 'unknownyes': 1, 'falsepos': 0, 'unique': 1740}
16: Danijel.csv: machine: {'count': 1423, 'truepos': 43, 'falseneg': 2, 'correction': 9, 'unknownyes': 3, 'falsepos': 3, 'unique': 770}
16: Danijel.csv: knee: {'count': 442, 'truepos': 32, 'falseneg': 7, 'correction': 5, 'unknownyes': 9, 'falsepos': 1, 'unique': 280}
16: K_all3.csv: none: {'count': 720, 'truepos': 29, 'falseneg': 14, 'correction': 0, 'unknownyes': 2, 'falsepos': 3, 'unique': 720}
16: K_all3.csv: three: {'count': 1246, 'truepos': 30, 'falseneg': 12, 'correction': 24, 'unknownyes': 3, 'falsepos': 0, 'unique': 610}
16: K_all3.csv: machine: {'count': 989, 'truepos': 35, 'falseneg': 5, 'correction': 7, 'unknownyes': 5, 'falsepos': 8, 'unique': 540}
16: K_all3.csv: knee: 
------------------------------------------------------------
Sender: LSF System <lsfadmin@n2b3-3>
Subject: Job 760342: </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 16> in cluster <henry2> Exited

Job </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 16> was submitted from host <login01.hpc.ncsu.edu> by user <zyu9> in cluster <henry2> at Sun Feb 25 12:29:24 2018.
Job was executed on host(s) <2*n2b3-3>, in queue <single_chassis>, as user <zyu9> in cluster <henry2> at Sun Feb 25 12:29:29 2018.
</home/zyu9> was used as the home directory.
</home/zyu9/projects/MAR_HPC/Error/src> was used as the working directory.
Started at Sun Feb 25 12:29:29 2018.
Terminated at Sun Feb 25 13:44:01 2018.
Results reported at Sun Feb 25 13:44:01 2018.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
/share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 16
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   5802.10 sec.
    Max Memory :                                 281.14 MB
    Average Memory :                             226.56 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   1326 MB
    Max Processes :                              3
    Max Threads :                                8
    Run time :                                   4473 sec.
    Turnaround time :                            4477 sec.

The output (if any) is above this job summary.



PS: The stderr output (if any) follows:

Traceback (most recent call last):
  File "runner.py", line 352, in <module>
    eval(cmd())
  File "<string>", line 1, in <module>
  File "runner.py", line 292, in error_hpcc
    result = BM25(file,queries[file],'knee','random')
  File "runner.py", line 193, in BM25
    seq = coded[np.argsort(read.body['time'][coded])]
TypeError: only integer scalar arrays can be converted to a scalar index


PS:

Fail to open stderr file ./err/16.err.760342: No such file or directory.
The stderr output is included in this report.

