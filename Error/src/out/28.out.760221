28: Hall.csv: none: {'count': 1320, 'truepos': 74, 'falseneg': 29, 'correction': 0, 'unknownyes': 1, 'falsepos': 3, 'unique': 1320}
28: Hall.csv: three: {'count': 1652, 'truepos': 77, 'falseneg': 25, 'correction': 45, 'unknownyes': 2, 'falsepos': 0, 'unique': 800}
28: Hall.csv: machine: {'count': 671, 'truepos': 97, 'falseneg': 5, 'correction': 21, 'unknownyes': 2, 'falsepos': 0, 'unique': 490}
28: Hall.csv: knee: {'count': 528, 'truepos': 89, 'falseneg': 9, 'correction': 23, 'unknownyes': 6, 'falsepos': 1, 'unique': 340}
28: Wahono.csv: none: {'count': 2130, 'truepos': 43, 'falseneg': 19, 'correction': 0, 'unknownyes': 0, 'falsepos': 6, 'unique': 2130}
28: Wahono.csv: three: {'count': 3737, 'truepos': 48, 'falseneg': 14, 'correction': 29, 'unknownyes': 0, 'falsepos': 1, 'unique': 1850}
28: Wahono.csv: machine: {'count': 1630, 'truepos': 52, 'falseneg': 6, 'correction': 19, 'unknownyes': 4, 'falsepos': 2, 'unique': 1160}
28: Wahono.csv: knee: {'count': 1129, 'truepos': 48, 'falseneg': 6, 'correction': 11, 'unknownyes': 8, 'falsepos': 3, 'unique': 770}
28: Danijel.csv: none: {'count': 1740, 'truepos': 34, 'falseneg': 13, 'correction': 0, 'unknownyes': 1, 'falsepos': 3, 'unique': 1740}
28: Danijel.csv: three: {'count': 1681, 'truepos': 39, 'falseneg': 7, 'correction': 19, 'unknownyes': 2, 'falsepos': 0, 'unique': 830}
28: Danijel.csv: machine: {'count': 1175, 'truepos': 36, 'falseneg': 10, 'correction': 13, 'unknownyes': 2, 'falsepos': 2, 'unique': 850}
28: Danijel.csv: knee: {'count': 460, 'truepos': 30, 'falseneg': 9, 'correction': 5, 'unknownyes': 9, 'falsepos': 1, 'unique': 320}
28: K_all3.csv: none: {'count': 630, 'truepos': 25, 'falseneg': 18, 'correction': 0, 'unknownyes': 2, 'falsepos': 4, 'unique': 630}
28: K_all3.csv: three: {'count': 1246, 'truepos': 32, 'falseneg': 11, 'correction': 20, 'unknownyes': 2, 'falsepos': 0, 'unique': 610}
28: K_all3.csv: machine: {'count': 673, 'truepos': 36, 'falseneg': 6, 'correction': 9, 'unknownyes': 3, 'falsepos': 2, 'unique': 490}
28: K_all3.csv: knee: 
------------------------------------------------------------
Sender: LSF System <lsfadmin@n2c3-13>
Subject: Job 760221: </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 28> in cluster <henry2> Exited

Job </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 28> was submitted from host <login01.hpc.ncsu.edu> by user <zyu9> in cluster <henry2> at Sun Feb 25 09:13:35 2018.
Job was executed on host(s) <2*n2c3-13>, in queue <single_chassis>, as user <zyu9> in cluster <henry2> at Sun Feb 25 09:13:42 2018.
</home/zyu9> was used as the home directory.
</home/zyu9/projects/MAR_HPC/Error/src> was used as the working directory.
Started at Sun Feb 25 09:13:42 2018.
Terminated at Sun Feb 25 10:27:44 2018.
Results reported at Sun Feb 25 10:27:44 2018.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
/share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 28
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   5590.40 sec.
    Max Memory :                                 287.53 MB
    Average Memory :                             227.46 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   1331 MB
    Max Processes :                              3
    Max Threads :                                8
    Run time :                                   4443 sec.
    Turnaround time :                            4449 sec.

The output (if any) is above this job summary.



PS: The stderr output (if any) follows:

Traceback (most recent call last):
  File "runner.py", line 352, in <module>
    eval(cmd())
  File "<string>", line 1, in <module>
  File "runner.py", line 292, in error_hpcc
    result = BM25(file,queries[file],'knee','random')
  File "runner.py", line 193, in BM25
    seq = coded[np.argsort(read.body['time'][coded])]
TypeError: only integer scalar arrays can be converted to a scalar index


PS:

Fail to open stderr file ./err/28.err.760221: No such file or directory.
The stderr output is included in this report.

