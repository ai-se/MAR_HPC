23: Hall.csv: none: {'count': 970, 'truepos': 73, 'falseneg': 30, 'correction': 0, 'unknownyes': 1, 'falsepos': 0, 'unique': 970}
23: Hall.csv: three: {'count': 1580, 'truepos': 86, 'falseneg': 16, 'correction': 37, 'unknownyes': 2, 'falsepos': 0, 'unique': 770}
23: Hall.csv: machine: {'count': 852, 'truepos': 97, 'falseneg': 5, 'correction': 26, 'unknownyes': 2, 'falsepos': 2, 'unique': 610}
23: Hall.csv: knee: {'count': 656, 'truepos': 87, 'falseneg': 15, 'correction': 15, 'unknownyes': 2, 'falsepos': 0, 'unique': 500}
23: Wahono.csv: none: {'count': 1340, 'truepos': 39, 'falseneg': 21, 'correction': 0, 'unknownyes': 2, 'falsepos': 1, 'unique': 1340}
23: Wahono.csv: three: {'count': 3610, 'truepos': 49, 'falseneg': 10, 'correction': 28, 'unknownyes': 3, 'falsepos': 0, 'unique': 1790}
23: Wahono.csv: machine: {'count': 1853, 'truepos': 50, 'falseneg': 9, 'correction': 19, 'unknownyes': 3, 'falsepos': 0, 'unique': 1320}
23: Wahono.csv: knee: {'count': 1016, 'truepos': 51, 'falseneg': 7, 'correction': 9, 'unknownyes': 4, 'falsepos': 0, 'unique': 750}
23: Danijel.csv: none: {'count': 1350, 'truepos': 34, 'falseneg': 12, 'correction': 0, 'unknownyes': 2, 'falsepos': 2, 'unique': 1350}
23: Danijel.csv: three: {'count': 2305, 'truepos': 36, 'falseneg': 11, 'correction': 22, 'unknownyes': 1, 'falsepos': 0, 'unique': 1140}
23: Danijel.csv: machine: {'count': 1234, 'truepos': 38, 'falseneg': 8, 'correction': 8, 'unknownyes': 2, 'falsepos': 1, 'unique': 890}
23: Danijel.csv: knee: {'count': 507, 'truepos': 33, 'falseneg': 6, 'correction': 5, 'unknownyes': 9, 'falsepos': 2, 'unique': 370}
23: K_all3.csv: none: {'count': 560, 'truepos': 34, 'falseneg': 6, 'correction': 0, 'unknownyes': 5, 'falsepos': 7, 'unique': 560}
23: K_all3.csv: three: {'count': 1391, 'truepos': 30, 'falseneg': 11, 'correction': 27, 'unknownyes': 4, 'falsepos': 0, 'unique': 680}
23: K_all3.csv: machine: {'count': 823, 'truepos': 33, 'falseneg': 10, 'correction': 9, 'unknownyes': 2, 'falsepos': 7, 'unique': 600}
23: K_all3.csv: knee: 
------------------------------------------------------------
Sender: LSF System <lsfadmin@n2c1-13>
Subject: Job 759954: </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 23> in cluster <henry2> Exited

Job </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 23> was submitted from host <login01.hpc.ncsu.edu> by user <zyu9> in cluster <henry2> at Sat Feb 24 20:13:28 2018.
Job was executed on host(s) <2*n2c1-13>, in queue <single_chassis>, as user <zyu9> in cluster <henry2> at Sat Feb 24 20:13:31 2018.
</home/zyu9> was used as the home directory.
</home/zyu9/projects/MAR_HPC/Error/src> was used as the working directory.
Started at Sat Feb 24 20:13:31 2018.
Terminated at Sat Feb 24 21:20:57 2018.
Results reported at Sat Feb 24 21:20:57 2018.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
/share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 23
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   5256.40 sec.
    Max Memory :                                 287.30 MB
    Average Memory :                             234.02 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   1331 MB
    Max Processes :                              3
    Max Threads :                                8
    Run time :                                   4059 sec.
    Turnaround time :                            4049 sec.

The output (if any) is above this job summary.



PS: The stderr output (if any) follows:

Traceback (most recent call last):
  File "runner.py", line 352, in <module>
    eval(cmd())
  File "<string>", line 1, in <module>
  File "runner.py", line 292, in error_hpcc
    result = BM25(file,queries[file],'knee','random')
  File "runner.py", line 193, in BM25
    seq = coded[np.argsort(read.body['time'][coded])]
TypeError: only integer scalar arrays can be converted to a scalar index


PS:

Fail to open stderr file ./err/23.err.759954: No such file or directory.
The stderr output is included in this report.

