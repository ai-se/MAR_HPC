18: Hall.csv: none: {'count': 1190, 'truepos': 72, 'falseneg': 30, 'correction': 0, 'unknownyes': 2, 'falsepos': 4, 'unique': 1190}
18: Hall.csv: three: {'count': 1229, 'truepos': 79, 'falseneg': 23, 'correction': 44, 'unknownyes': 2, 'falsepos': 0, 'unique': 590}
18: Hall.csv: machine: {'count': 895, 'truepos': 94, 'falseneg': 8, 'correction': 35, 'unknownyes': 2, 'falsepos': 0, 'unique': 650}
18: Hall.csv: knee: {'count': 703, 'truepos': 92, 'falseneg': 9, 'correction': 28, 'unknownyes': 3, 'falsepos': 3, 'unique': 510}
18: Wahono.csv: none: {'count': 1830, 'truepos': 35, 'falseneg': 27, 'correction': 0, 'unknownyes': 0, 'falsepos': 4, 'unique': 1830}
18: Wahono.csv: three: {'count': 4356, 'truepos': 51, 'falseneg': 11, 'correction': 32, 'unknownyes': 0, 'falsepos': 0, 'unique': 2160}
18: Wahono.csv: machine: {'count': 2845, 'truepos': 52, 'falseneg': 10, 'correction': 34, 'unknownyes': 0, 'falsepos': 1, 'unique': 2030}
18: Wahono.csv: knee: {'count': 1439, 'truepos': 46, 'falseneg': 13, 'correction': 14, 'unknownyes': 3, 'falsepos': 0, 'unique': 1190}
18: Danijel.csv: none: {'count': 1030, 'truepos': 31, 'falseneg': 15, 'correction': 0, 'unknownyes': 2, 'falsepos': 1, 'unique': 1030}
18: Danijel.csv: three: {'count': 3127, 'truepos': 35, 'falseneg': 12, 'correction': 21, 'unknownyes': 1, 'falsepos': 0, 'unique': 1550}
18: Danijel.csv: machine: {'count': 1104, 'truepos': 36, 'falseneg': 10, 'correction': 12, 'unknownyes': 2, 'falsepos': 2, 'unique': 800}
18: Danijel.csv: knee: {'count': 986, 'truepos': 41, 'falseneg': 3, 'correction': 12, 'unknownyes': 4, 'falsepos': 3, 'unique': 690}
18: K_all3.csv: none: {'count': 810, 'truepos': 27, 'falseneg': 16, 'correction': 0, 'unknownyes': 2, 'falsepos': 8, 'unique': 810}
18: K_all3.csv: three: {'count': 1551, 'truepos': 32, 'falseneg': 10, 'correction': 30, 'unknownyes': 3, 'falsepos': 0, 'unique': 760}
18: K_all3.csv: machine: {'count': 741, 'truepos': 37, 'falseneg': 4, 'correction': 7, 'unknownyes': 4, 'falsepos': 8, 'unique': 540}
18: K_all3.csv: knee: 
------------------------------------------------------------
Sender: LSF System <lsfadmin@n2c2-2>
Subject: Job 760211: </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 18> in cluster <henry2> Exited

Job </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 18> was submitted from host <login01.hpc.ncsu.edu> by user <zyu9> in cluster <henry2> at Sun Feb 25 09:13:35 2018.
Job was executed on host(s) <2*n2c2-2>, in queue <single_chassis>, as user <zyu9> in cluster <henry2> at Sun Feb 25 09:13:42 2018.
</home/zyu9> was used as the home directory.
</home/zyu9/projects/MAR_HPC/Error/src> was used as the working directory.
Started at Sun Feb 25 09:13:42 2018.
Terminated at Sun Feb 25 10:30:10 2018.
Results reported at Sun Feb 25 10:30:10 2018.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
/share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 18
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   5702.02 sec.
    Max Memory :                                 287.00 MB
    Average Memory :                             231.03 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   1331 MB
    Max Processes :                              3
    Max Threads :                                8
    Run time :                                   4588 sec.
    Turnaround time :                            4595 sec.

The output (if any) is above this job summary.



PS: The stderr output (if any) follows:

Traceback (most recent call last):
  File "runner.py", line 352, in <module>
    eval(cmd())
  File "<string>", line 1, in <module>
  File "runner.py", line 292, in error_hpcc
    result = BM25(file,queries[file],'knee','random')
  File "runner.py", line 193, in BM25
    seq = coded[np.argsort(read.body['time'][coded])]
TypeError: only integer scalar arrays can be converted to a scalar index


PS:

Fail to open stderr file ./err/18.err.760211: No such file or directory.
The stderr output is included in this report.

