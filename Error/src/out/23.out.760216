23: Hall.csv: none: {'count': 1370, 'truepos': 71, 'falseneg': 32, 'correction': 0, 'unknownyes': 1, 'falsepos': 6, 'unique': 1370}
23: Hall.csv: three: {'count': 1976, 'truepos': 82, 'falseneg': 20, 'correction': 49, 'unknownyes': 2, 'falsepos': 0, 'unique': 960}
23: Hall.csv: machine: {'count': 1438, 'truepos': 92, 'falseneg': 11, 'correction': 27, 'unknownyes': 1, 'falsepos': 1, 'unique': 1030}
23: Hall.csv: knee: {'count': 598, 'truepos': 84, 'falseneg': 16, 'correction': 23, 'unknownyes': 4, 'falsepos': 2, 'unique': 400}
23: Wahono.csv: none: {'count': 1530, 'truepos': 39, 'falseneg': 20, 'correction': 0, 'unknownyes': 3, 'falsepos': 7, 'unique': 1530}
23: Wahono.csv: three: {'count': 3233, 'truepos': 40, 'falseneg': 20, 'correction': 24, 'unknownyes': 2, 'falsepos': 0, 'unique': 1600}
23: Wahono.csv: machine: {'count': 1805, 'truepos': 50, 'falseneg': 10, 'correction': 13, 'unknownyes': 2, 'falsepos': 3, 'unique': 1300}
23: Wahono.csv: knee: {'count': 949, 'truepos': 45, 'falseneg': 6, 'correction': 11, 'unknownyes': 11, 'falsepos': 0, 'unique': 600}
23: Danijel.csv: none: {'count': 1210, 'truepos': 31, 'falseneg': 14, 'correction': 0, 'unknownyes': 3, 'falsepos': 1, 'unique': 1210}
23: Danijel.csv: three: {'count': 2187, 'truepos': 34, 'falseneg': 12, 'correction': 20, 'unknownyes': 2, 'falsepos': 0, 'unique': 1080}
23: Danijel.csv: machine: {'count': 1074, 'truepos': 43, 'falseneg': 3, 'correction': 11, 'unknownyes': 2, 'falsepos': 1, 'unique': 770}
23: Danijel.csv: knee: {'count': 1490, 'truepos': 38, 'falseneg': 9, 'correction': 18, 'unknownyes': 1, 'falsepos': 1, 'unique': 1230}
23: K_all3.csv: none: {'count': 650, 'truepos': 34, 'falseneg': 9, 'correction': 0, 'unknownyes': 2, 'falsepos': 6, 'unique': 650}
23: K_all3.csv: three: {'count': 1234, 'truepos': 36, 'falseneg': 7, 'correction': 30, 'unknownyes': 2, 'falsepos': 0, 'unique': 600}
23: K_all3.csv: machine: {'count': 743, 'truepos': 36, 'falseneg': 7, 'correction': 9, 'unknownyes': 2, 'falsepos': 2, 'unique': 540}
23: K_all3.csv: knee: 
------------------------------------------------------------
Sender: LSF System <lsfadmin@n2c2-8>
Subject: Job 760216: </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 23> in cluster <henry2> Exited

Job </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 23> was submitted from host <login01.hpc.ncsu.edu> by user <zyu9> in cluster <henry2> at Sun Feb 25 09:13:35 2018.
Job was executed on host(s) <2*n2c2-8>, in queue <single_chassis>, as user <zyu9> in cluster <henry2> at Sun Feb 25 09:13:42 2018.
</home/zyu9> was used as the home directory.
</home/zyu9/projects/MAR_HPC/Error/src> was used as the working directory.
Started at Sun Feb 25 09:13:42 2018.
Terminated at Sun Feb 25 10:18:48 2018.
Results reported at Sun Feb 25 10:18:48 2018.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
/share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 23
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   5063.58 sec.
    Max Memory :                                 287.93 MB
    Average Memory :                             229.60 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   1331 MB
    Max Processes :                              3
    Max Threads :                                8
    Run time :                                   3906 sec.
    Turnaround time :                            3913 sec.

The output (if any) is above this job summary.



PS: The stderr output (if any) follows:

Traceback (most recent call last):
  File "runner.py", line 352, in <module>
    eval(cmd())
  File "<string>", line 1, in <module>
  File "runner.py", line 292, in error_hpcc
    result = BM25(file,queries[file],'knee','random')
  File "runner.py", line 193, in BM25
    seq = coded[np.argsort(read.body['time'][coded])]
TypeError: only integer scalar arrays can be converted to a scalar index


PS:

Fail to open stderr file ./err/23.err.760216: No such file or directory.
The stderr output is included in this report.

