5: Hall.csv: none: {'count': 1170, 'truepos': 74, 'falseneg': 29, 'correction': 0, 'unknownyes': 1, 'falsepos': 5, 'unique': 1170}
5: Hall.csv: three: {'count': 1191, 'truepos': 78, 'falseneg': 24, 'correction': 39, 'unknownyes': 2, 'falsepos': 0, 'unique': 570}
5: Hall.csv: machine: {'count': 935, 'truepos': 92, 'falseneg': 10, 'correction': 18, 'unknownyes': 2, 'falsepos': 4, 'unique': 670}
5: Hall.csv: knee: {'count': 637, 'truepos': 93, 'falseneg': 8, 'correction': 22, 'unknownyes': 3, 'falsepos': 0, 'unique': 450}
5: Wahono.csv: none: {'count': 1550, 'truepos': 37, 'falseneg': 22, 'correction': 0, 'unknownyes': 3, 'falsepos': 2, 'unique': 1550}
5: Wahono.csv: three: {'count': 3294, 'truepos': 51, 'falseneg': 11, 'correction': 32, 'unknownyes': 0, 'falsepos': 0, 'unique': 1630}
5: Wahono.csv: machine: {'count': 3248, 'truepos': 55, 'falseneg': 6, 'correction': 27, 'unknownyes': 1, 'falsepos': 1, 'unique': 2310}
5: Wahono.csv: knee: {'count': 1270, 'truepos': 47, 'falseneg': 11, 'correction': 11, 'unknownyes': 4, 'falsepos': 0, 'unique': 1100}
5: Danijel.csv: none: {'count': 1500, 'truepos': 31, 'falseneg': 15, 'correction': 0, 'unknownyes': 2, 'falsepos': 4, 'unique': 1500}
5: Danijel.csv: three: {'count': 2682, 'truepos': 36, 'falseneg': 10, 'correction': 17, 'unknownyes': 2, 'falsepos': 0, 'unique': 1330}
5: Danijel.csv: machine: {'count': 1236, 'truepos': 36, 'falseneg': 10, 'correction': 12, 'unknownyes': 2, 'falsepos': 0, 'unique': 890}
5: Danijel.csv: knee: {'count': 680, 'truepos': 38, 'falseneg': 6, 'correction': 8, 'unknownyes': 4, 'falsepos': 0, 'unique': 550}
5: K_all3.csv: none: {'count': 620, 'truepos': 33, 'falseneg': 9, 'correction': 0, 'unknownyes': 3, 'falsepos': 5, 'unique': 620}
5: K_all3.csv: three: {'count': 1304, 'truepos': 35, 'falseneg': 8, 'correction': 22, 'unknownyes': 2, 'falsepos': 0, 'unique': 640}
5: K_all3.csv: machine: null
{'count': 862, 'truepos': 33, 'falseneg': 7, 'correction': 10, 'unknownyes': 5, 'falsepos': 5, 'unique': 620}
5: K_all3.csv: knee: 
------------------------------------------------------------
Sender: LSF System <lsfadmin@n2b2-12>
Subject: Job 759936: </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 5> in cluster <henry2> Exited

Job </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 5> was submitted from host <login01.hpc.ncsu.edu> by user <zyu9> in cluster <henry2> at Sat Feb 24 20:13:28 2018.
Job was executed on host(s) <2*n2b2-12>, in queue <single_chassis>, as user <zyu9> in cluster <henry2> at Sat Feb 24 20:13:31 2018.
</home/zyu9> was used as the home directory.
</home/zyu9/projects/MAR_HPC/Error/src> was used as the working directory.
Started at Sat Feb 24 20:13:31 2018.
Terminated at Sat Feb 24 21:38:28 2018.
Results reported at Sat Feb 24 21:38:28 2018.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
/share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 5
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   6232.46 sec.
    Max Memory :                                 282.52 MB
    Average Memory :                             228.35 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   1326 MB
    Max Processes :                              3
    Max Threads :                                8
    Run time :                                   5108 sec.
    Turnaround time :                            5100 sec.

The output (if any) is above this job summary.



PS: The stderr output (if any) follows:

Traceback (most recent call last):
  File "runner.py", line 352, in <module>
    eval(cmd())
  File "<string>", line 1, in <module>
  File "runner.py", line 292, in error_hpcc
    result = BM25(file,queries[file],'knee','random')
  File "runner.py", line 193, in BM25
    seq = coded[np.argsort(read.body['time'][coded])]
TypeError: only integer scalar arrays can be converted to a scalar index


PS:

Fail to open stderr file ./err/5.err.759936: No such file or directory.
The stderr output is included in this report.

