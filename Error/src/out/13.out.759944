13: Hall.csv: none: {'count': 630, 'truepos': 77, 'falseneg': 25, 'correction': 0, 'unknownyes': 2, 'falsepos': 1, 'unique': 630}
13: Hall.csv: three: {'count': 1854, 'truepos': 80, 'falseneg': 22, 'correction': 49, 'unknownyes': 2, 'falsepos': 1, 'unique': 900}
13: Hall.csv: machine: {'count': 784, 'truepos': 90, 'falseneg': 12, 'correction': 22, 'unknownyes': 2, 'falsepos': 0, 'unique': 560}
13: Hall.csv: knee: {'count': 593, 'truepos': 84, 'falseneg': 18, 'correction': 19, 'unknownyes': 2, 'falsepos': 1, 'unique': 430}
13: Wahono.csv: none: {'count': 1840, 'truepos': 45, 'falseneg': 16, 'correction': 0, 'unknownyes': 1, 'falsepos': 4, 'unique': 1840}
13: Wahono.csv: three: {'count': 2740, 'truepos': 51, 'falseneg': 8, 'correction': 39, 'unknownyes': 3, 'falsepos': 0, 'unique': 1350}
13: Wahono.csv: machine: {'count': 1908, 'truepos': 54, 'falseneg': 6, 'correction': 20, 'unknownyes': 2, 'falsepos': 0, 'unique': 1360}
13: Wahono.csv: knee: {'count': 1345, 'truepos': 52, 'falseneg': 7, 'correction': 9, 'unknownyes': 3, 'falsepos': 0, 'unique': 1080}
13: Danijel.csv: none: {'count': 1040, 'truepos': 32, 'falseneg': 14, 'correction': 0, 'unknownyes': 2, 'falsepos': 6, 'unique': 1040}
13: Danijel.csv: three: {'count': 2403, 'truepos': 33, 'falseneg': 13, 'correction': 22, 'unknownyes': 2, 'falsepos': 0, 'unique': 1190}
13: Danijel.csv: machine: {'count': 1276, 'truepos': 37, 'falseneg': 8, 'correction': 12, 'unknownyes': 3, 'falsepos': 1, 'unique': 910}
13: Danijel.csv: knee: {'count': 253, 'truepos': 24, 'falseneg': 7, 'correction': 5, 'unknownyes': 17, 'falsepos': 0, 'unique': 170}
13: K_all3.csv: none: {'count': 610, 'truepos': 32, 'falseneg': 9, 'correction': 0, 'unknownyes': 4, 'falsepos': 7, 'unique': 610}
13: K_all3.csv: three: {'count': 1333, 'truepos': 35, 'falseneg': 8, 'correction': 31, 'unknownyes': 2, 'falsepos': 0, 'unique': 650}
13: K_all3.csv: machine: {'count': 825, 'truepos': 32, 'falseneg': 10, 'correction': 12, 'unknownyes': 3, 'falsepos': 5, 'unique': 600}
13: K_all3.csv: knee: 
------------------------------------------------------------
Sender: LSF System <lsfadmin@n2e5-7>
Subject: Job 759944: </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 13> in cluster <henry2> Exited

Job </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 13> was submitted from host <login01.hpc.ncsu.edu> by user <zyu9> in cluster <henry2> at Sat Feb 24 20:13:28 2018.
Job was executed on host(s) <2*n2e5-7>, in queue <single_chassis>, as user <zyu9> in cluster <henry2> at Sat Feb 24 20:13:31 2018.
</home/zyu9> was used as the home directory.
</home/zyu9/projects/MAR_HPC/Error/src> was used as the working directory.
Started at Sat Feb 24 20:13:31 2018.
Terminated at Sat Feb 24 21:24:34 2018.
Results reported at Sat Feb 24 21:24:34 2018.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
/share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 13
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   5478.28 sec.
    Max Memory :                                 280.89 MB
    Average Memory :                             228.97 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   1326 MB
    Max Processes :                              3
    Max Threads :                                8
    Run time :                                   4275 sec.
    Turnaround time :                            4266 sec.

The output (if any) is above this job summary.



PS: The stderr output (if any) follows:

Traceback (most recent call last):
  File "runner.py", line 352, in <module>
    eval(cmd())
  File "<string>", line 1, in <module>
  File "runner.py", line 292, in error_hpcc
    result = BM25(file,queries[file],'knee','random')
  File "runner.py", line 193, in BM25
    seq = coded[np.argsort(read.body['time'][coded])]
TypeError: only integer scalar arrays can be converted to a scalar index


PS:

Fail to open stderr file ./err/13.err.759944: No such file or directory.
The stderr output is included in this report.

