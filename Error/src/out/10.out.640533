10: Hall.csv: none: {'count': 760, 'truepos': 70, 'falseneg': 32, 'correction': 0, 'unknownyes': 2, 'falsepos': 0, 'unique': 760}
10: Hall.csv: three: {'count': 959, 'truepos': 80, 'falseneg': 22, 'correction': 31, 'unknownyes': 2, 'falsepos': 0, 'unique': 460}
10: Hall.csv: machine: {'count': 990, 'truepos': 91, 'falseneg': 11, 'correction': 16, 'unknownyes': 2, 'falsepos': 0, 'unique': 640}
10: Hall.csv: knee: {'count': 651, 'truepos': 89, 'falseneg': 12, 'correction': 14, 'unknownyes': 3, 'falsepos': 1, 'unique': 500}
10: Wahono.csv: none: {'count': 1660, 'truepos': 46, 'falseneg': 14, 'correction': 0, 'unknownyes': 2, 'falsepos': 4, 'unique': 1660}
10: Wahono.csv: three: {'count': 2743, 'truepos': 46, 'falseneg': 14, 'correction': 17, 'unknownyes': 2, 'falsepos': 0, 'unique': 1360}
10: Wahono.csv: machine: {'count': 1956, 'truepos': 47, 'falseneg': 13, 'correction': 15, 'unknownyes': 2, 'falsepos': 0, 'unique': 1370}
10: Wahono.csv: knee: {'count': 1219, 'truepos': 49, 'falseneg': 9, 'correction': 14, 'unknownyes': 4, 'falsepos': 1, 'unique': 930}
10: Danijel.csv: none: {'count': 1460, 'truepos': 30, 'falseneg': 17, 'correction': 0, 'unknownyes': 1, 'falsepos': 3, 'unique': 1460}
10: Danijel.csv: three: {'count': 1678, 'truepos': 41, 'falseneg': 5, 'correction': 18, 'unknownyes': 2, 'falsepos': 0, 'unique': 830}
10: Danijel.csv: machine: {'count': 1138, 'truepos': 39, 'falseneg': 7, 'correction': 18, 'unknownyes': 2, 'falsepos': 1, 'unique': 740}
10: Danijel.csv: knee: {'count': 737, 'truepos': 37, 'falseneg': 3, 'correction': 9, 'unknownyes': 8, 'falsepos': 3, 'unique': 500}
10: K_all3.csv: none: {'count': 670, 'truepos': 34, 'falseneg': 10, 'correction': 0, 'unknownyes': 1, 'falsepos': 3, 'unique': 670}
10: K_all3.csv: three: {'count': 1220, 'truepos': 36, 'falseneg': 6, 'correction': 18, 'unknownyes': 3, 'falsepos': 0, 'unique': 600}
10: K_all3.csv: machine: {'count': 871, 'truepos': 33, 'falseneg': 4, 'correction': 9, 'unknownyes': 8, 'falsepos': 5, 'unique': 490}
10: K_all3.csv: knee: 
------------------------------------------------------------
Sender: LSF System <lsfadmin@n2c2-11>
Subject: Job 640533: </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 10> in cluster <henry2> Exited

Job </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 10> was submitted from host <login01.hpc.ncsu.edu> by user <zyu9> in cluster <henry2> at Thu Feb  1 16:35:45 2018.
Job was executed on host(s) <2*n2c2-11>, in queue <single_chassis>, as user <zyu9> in cluster <henry2> at Thu Feb  1 16:35:51 2018.
</home/zyu9> was used as the home directory.
</home/zyu9/projects/MAR_HPC/Error/src> was used as the working directory.
Started at Thu Feb  1 16:35:51 2018.
Terminated at Thu Feb  1 17:46:58 2018.
Results reported at Thu Feb  1 17:46:58 2018.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
/share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 10
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   5520.97 sec.
    Max Memory :                                 281.66 MB
    Average Memory :                             230.73 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   1327 MB
    Max Processes :                              3
    Max Threads :                                8
    Run time :                                   4281 sec.
    Turnaround time :                            4273 sec.

The output (if any) is above this job summary.



PS: The stderr output (if any) follows:

Traceback (most recent call last):
  File "runner.py", line 1740, in <module>
    eval(cmd())
  File "<string>", line 1, in <module>
  File "runner.py", line 1682, in error_hpcc
    result = BM25(file,queries[file],'knee','random')
  File "runner.py", line 1215, in BM25
    seq = coded[np.argsort(read.body['time'][coded])]
TypeError: only integer scalar arrays can be converted to a scalar index


PS:

Fail to open stderr file ./err/10.err.640533: No such file or directory.
The stderr output is included in this report.

