26: Hall.csv: none: {'count': 1550, 'truepos': 74, 'falseneg': 29, 'correction': 0, 'unknownyes': 1, 'falsepos': 10, 'unique': 1550}
26: Hall.csv: three: {'count': 1528, 'truepos': 80, 'falseneg': 22, 'correction': 45, 'unknownyes': 2, 'falsepos': 0, 'unique': 740}
26: Hall.csv: machine: {'count': 752, 'truepos': 89, 'falseneg': 13, 'correction': 20, 'unknownyes': 2, 'falsepos': 3, 'unique': 550}
26: Hall.csv: knee: {'count': 674, 'truepos': 82, 'falseneg': 19, 'correction': 13, 'unknownyes': 3, 'falsepos': 0, 'unique': 500}
26: Wahono.csv: none: {'count': 2190, 'truepos': 41, 'falseneg': 19, 'correction': 0, 'unknownyes': 2, 'falsepos': 6, 'unique': 2190}
26: Wahono.csv: three: {'count': 2809, 'truepos': 47, 'falseneg': 13, 'correction': 27, 'unknownyes': 2, 'falsepos': 0, 'unique': 1390}
26: Wahono.csv: machine: {'count': 2050, 'truepos': 53, 'falseneg': 8, 'correction': 21, 'unknownyes': 1, 'falsepos': 0, 'unique': 1460}
26: Wahono.csv: knee: {'count': 391, 'truepos': 37, 'falseneg': 4, 'correction': 4, 'unknownyes': 21, 'falsepos': 1, 'unique': 260}
26: Danijel.csv: none: {'count': 1160, 'truepos': 30, 'falseneg': 16, 'correction': 0, 'unknownyes': 2, 'falsepos': 3, 'unique': 1160}
26: Danijel.csv: three: {'count': 2409, 'truepos': 34, 'falseneg': 12, 'correction': 26, 'unknownyes': 2, 'falsepos': 0, 'unique': 1190}
26: Danijel.csv: machine: {'count': 1085, 'truepos': 38, 'falseneg': 8, 'correction': 14, 'unknownyes': 2, 'falsepos': 0, 'unique': 780}
26: Danijel.csv: knee: {'count': 682, 'truepos': 39, 'falseneg': 6, 'correction': 9, 'unknownyes': 3, 'falsepos': 0, 'unique': 500}
26: K_all3.csv: none: {'count': 470, 'truepos': 34, 'falseneg': 6, 'correction': 0, 'unknownyes': 5, 'falsepos': 4, 'unique': 470}
26: K_all3.csv: three: {'count': 1262, 'truepos': 33, 'falseneg': 8, 'correction': 21, 'unknownyes': 4, 'falsepos': 0, 'unique': 620}
26: K_all3.csv: machine: {'count': 806, 'truepos': 31, 'falseneg': 11, 'correction': 9, 'unknownyes': 3, 'falsepos': 3, 'unique': 580}
26: K_all3.csv: knee: 
------------------------------------------------------------
Sender: LSF System <lsfadmin@n2c3-9>
Subject: Job 760219: </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 26> in cluster <henry2> Exited

Job </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 26> was submitted from host <login01.hpc.ncsu.edu> by user <zyu9> in cluster <henry2> at Sun Feb 25 09:13:35 2018.
Job was executed on host(s) <2*n2c3-9>, in queue <single_chassis>, as user <zyu9> in cluster <henry2> at Sun Feb 25 09:13:42 2018.
</home/zyu9> was used as the home directory.
</home/zyu9/projects/MAR_HPC/Error/src> was used as the working directory.
Started at Sun Feb 25 09:13:42 2018.
Terminated at Sun Feb 25 10:21:37 2018.
Results reported at Sun Feb 25 10:21:37 2018.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
/share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 26
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   5220.32 sec.
    Max Memory :                                 286.25 MB
    Average Memory :                             224.54 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   1331 MB
    Max Processes :                              3
    Max Threads :                                8
    Run time :                                   4082 sec.
    Turnaround time :                            4082 sec.

The output (if any) is above this job summary.



PS: The stderr output (if any) follows:

Traceback (most recent call last):
  File "runner.py", line 352, in <module>
    eval(cmd())
  File "<string>", line 1, in <module>
  File "runner.py", line 292, in error_hpcc
    result = BM25(file,queries[file],'knee','random')
  File "runner.py", line 193, in BM25
    seq = coded[np.argsort(read.body['time'][coded])]
TypeError: only integer scalar arrays can be converted to a scalar index


PS:

Fail to open stderr file ./err/26.err.760219: No such file or directory.
The stderr output is included in this report.

