30: Hall.csv: none: {'count': 1130, 'truepos': 73, 'falseneg': 30, 'correction': 0, 'unknownyes': 1, 'falsepos': 6, 'unique': 1130}
30: Hall.csv: three: {'count': 2229, 'truepos': 71, 'falseneg': 32, 'correction': 41, 'unknownyes': 1, 'falsepos': 0, 'unique': 1090}
30: Hall.csv: machine: {'count': 584, 'truepos': 89, 'falseneg': 11, 'correction': 25, 'unknownyes': 4, 'falsepos': 0, 'unique': 420}
30: Hall.csv: knee: {'count': 651, 'truepos': 85, 'falseneg': 17, 'correction': 15, 'unknownyes': 2, 'falsepos': 0, 'unique': 480}
30: Wahono.csv: none: {'count': 1920, 'truepos': 45, 'falseneg': 16, 'correction': 0, 'unknownyes': 1, 'falsepos': 5, 'unique': 1920}
30: Wahono.csv: three: {'count': 3313, 'truepos': 49, 'falseneg': 13, 'correction': 26, 'unknownyes': 0, 'falsepos': 0, 'unique': 1640}
30: Wahono.csv: machine: {'count': 2263, 'truepos': 51, 'falseneg': 10, 'correction': 25, 'unknownyes': 1, 'falsepos': 1, 'unique': 1610}
30: Wahono.csv: knee: {'count': 2281, 'truepos': 53, 'falseneg': 6, 'correction': 20, 'unknownyes': 3, 'falsepos': 6, 'unique': 1600}
30: Danijel.csv: none: {'count': 960, 'truepos': 35, 'falseneg': 11, 'correction': 0, 'unknownyes': 2, 'falsepos': 3, 'unique': 960}
30: Danijel.csv: three: {'count': 2018, 'truepos': 36, 'falseneg': 10, 'correction': 16, 'unknownyes': 2, 'falsepos': 0, 'unique': 1000}
30: Danijel.csv: machine: {'count': 1023, 'truepos': 41, 'falseneg': 5, 'correction': 11, 'unknownyes': 2, 'falsepos': 0, 'unique': 740}
30: Danijel.csv: knee: {'count': 798, 'truepos': 35, 'falseneg': 9, 'correction': 9, 'unknownyes': 4, 'falsepos': 1, 'unique': 640}
30: K_all3.csv: none: {'count': 500, 'truepos': 32, 'falseneg': 6, 'correction': 0, 'unknownyes': 7, 'falsepos': 6, 'unique': 500}
30: K_all3.csv: three: {'count': 1405, 'truepos': 32, 'falseneg': 11, 'correction': 22, 'unknownyes': 2, 'falsepos': 1, 'unique': 690}
30: K_all3.csv: machine: {'count': 874, 'truepos': 40, 'falseneg': 3, 'correction': 9, 'unknownyes': 2, 'falsepos': 4, 'unique': 630}
30: K_all3.csv: knee: 
------------------------------------------------------------
Sender: LSF System <lsfadmin@n2c1-8>
Subject: Job 759961: </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 30> in cluster <henry2> Exited

Job </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 30> was submitted from host <login01.hpc.ncsu.edu> by user <zyu9> in cluster <henry2> at Sat Feb 24 20:13:29 2018.
Job was executed on host(s) <2*n2c1-8>, in queue <single_chassis>, as user <zyu9> in cluster <henry2> at Sat Feb 24 20:13:31 2018.
</home/zyu9> was used as the home directory.
</home/zyu9/projects/MAR_HPC/Error/src> was used as the working directory.
Started at Sat Feb 24 20:13:31 2018.
Terminated at Sat Feb 24 21:35:26 2018.
Results reported at Sat Feb 24 21:35:26 2018.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
/share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 30
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   5920.50 sec.
    Max Memory :                                 285.43 MB
    Average Memory :                             228.15 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   1331 MB
    Max Processes :                              3
    Max Threads :                                8
    Run time :                                   4930 sec.
    Turnaround time :                            4917 sec.

The output (if any) is above this job summary.



PS: The stderr output (if any) follows:

Traceback (most recent call last):
  File "runner.py", line 352, in <module>
    eval(cmd())
  File "<string>", line 1, in <module>
  File "runner.py", line 292, in error_hpcc
    result = BM25(file,queries[file],'knee','random')
  File "runner.py", line 193, in BM25
    seq = coded[np.argsort(read.body['time'][coded])]
TypeError: only integer scalar arrays can be converted to a scalar index


PS:

Fail to open stderr file ./err/30.err.759961: No such file or directory.
The stderr output is included in this report.

