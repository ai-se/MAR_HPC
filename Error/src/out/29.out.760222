29: Hall.csv: none: {'count': 1850, 'truepos': 71, 'falseneg': 32, 'correction': 0, 'unknownyes': 1, 'falsepos': 1, 'unique': 1850}
29: Hall.csv: three: {'count': 3136, 'truepos': 80, 'falseneg': 23, 'correction': 49, 'unknownyes': 1, 'falsepos': 0, 'unique': 1540}
29: Hall.csv: machine: {'count': 865, 'truepos': 87, 'falseneg': 15, 'correction': 24, 'unknownyes': 2, 'falsepos': 0, 'unique': 620}
29: Hall.csv: knee: {'count': 787, 'truepos': 95, 'falseneg': 7, 'correction': 26, 'unknownyes': 2, 'falsepos': 3, 'unique': 540}
29: Wahono.csv: none: {'count': 1770, 'truepos': 41, 'falseneg': 18, 'correction': 0, 'unknownyes': 3, 'falsepos': 1, 'unique': 1770}
29: Wahono.csv: three: {'count': 2486, 'truepos': 46, 'falseneg': 14, 'correction': 20, 'unknownyes': 2, 'falsepos': 0, 'unique': 1230}
29: Wahono.csv: machine: {'count': 2120, 'truepos': 54, 'falseneg': 7, 'correction': 16, 'unknownyes': 1, 'falsepos': 0, 'unique': 1510}
29: Wahono.csv: knee: {'count': 1620, 'truepos': 53, 'falseneg': 7, 'correction': 14, 'unknownyes': 2, 'falsepos': 0, 'unique': 1320}
29: Danijel.csv: none: {'count': 1330, 'truepos': 33, 'falseneg': 13, 'correction': 0, 'unknownyes': 2, 'falsepos': 3, 'unique': 1330}
29: Danijel.csv: three: {'count': 8944, 'truepos': 34, 'falseneg': 14, 'correction': 40, 'unknownyes': 0, 'falsepos': 0, 'unique': 4450}
29: Danijel.csv: machine: {'count': 1227, 'truepos': 38, 'falseneg': 7, 'correction': 17, 'unknownyes': 3, 'falsepos': 2, 'unique': 880}
29: Danijel.csv: knee: {'count': 787, 'truepos': 30, 'falseneg': 11, 'correction': 10, 'unknownyes': 7, 'falsepos': 0, 'unique': 670}
29: K_all3.csv: none: {'count': 490, 'truepos': 33, 'falseneg': 8, 'correction': 0, 'unknownyes': 4, 'falsepos': 5, 'unique': 490}
29: K_all3.csv: three: {'count': 1191, 'truepos': 32, 'falseneg': 10, 'correction': 27, 'unknownyes': 3, 'falsepos': 0, 'unique': 580}
29: K_all3.csv: machine: {'count': 655, 'truepos': 35, 'falseneg': 4, 'correction': 11, 'unknownyes': 6, 'falsepos': 5, 'unique': 470}
29: K_all3.csv: knee: 
------------------------------------------------------------
Sender: LSF System <lsfadmin@n2c3-2>
Subject: Job 760222: </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 29> in cluster <henry2> Exited

Job </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 29> was submitted from host <login01.hpc.ncsu.edu> by user <zyu9> in cluster <henry2> at Sun Feb 25 09:13:35 2018.
Job was executed on host(s) <2*n2c3-2>, in queue <single_chassis>, as user <zyu9> in cluster <henry2> at Sun Feb 25 09:13:42 2018.
</home/zyu9> was used as the home directory.
</home/zyu9/projects/MAR_HPC/Error/src> was used as the working directory.
Started at Sun Feb 25 09:13:42 2018.
Terminated at Sun Feb 25 10:54:26 2018.
Results reported at Sun Feb 25 10:54:26 2018.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
/share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 29
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   7372.54 sec.
    Max Memory :                                 283.47 MB
    Average Memory :                             230.84 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   1329 MB
    Max Processes :                              3
    Max Threads :                                8
    Run time :                                   6045 sec.
    Turnaround time :                            6051 sec.

The output (if any) is above this job summary.



PS: The stderr output (if any) follows:

Traceback (most recent call last):
  File "runner.py", line 352, in <module>
    eval(cmd())
  File "<string>", line 1, in <module>
  File "runner.py", line 292, in error_hpcc
    result = BM25(file,queries[file],'knee','random')
  File "runner.py", line 193, in BM25
    seq = coded[np.argsort(read.body['time'][coded])]
TypeError: only integer scalar arrays can be converted to a scalar index


PS:

Fail to open stderr file ./err/29.err.760222: No such file or directory.
The stderr output is included in this report.

