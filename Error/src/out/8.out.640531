8: Hall.csv: none: {'count': 1440, 'truepos': 75, 'falseneg': 28, 'correction': 0, 'unknownyes': 1, 'falsepos': 10, 'unique': 1440}
8: Hall.csv: three: {'count': 1146, 'truepos': 77, 'falseneg': 25, 'correction': 40, 'unknownyes': 2, 'falsepos': 0, 'unique': 550}
8: Hall.csv: machine: {'count': 1267, 'truepos': 83, 'falseneg': 19, 'correction': 30, 'unknownyes': 2, 'falsepos': 3, 'unique': 810}
8: Hall.csv: knee: {'count': 727, 'truepos': 87, 'falseneg': 14, 'correction': 21, 'unknownyes': 3, 'falsepos': 1, 'unique': 520}
8: Wahono.csv: none: {'count': 1430, 'truepos': 42, 'falseneg': 17, 'correction': 0, 'unknownyes': 3, 'falsepos': 3, 'unique': 1430}
8: Wahono.csv: three: {'count': 2733, 'truepos': 45, 'falseneg': 13, 'correction': 28, 'unknownyes': 4, 'falsepos': 0, 'unique': 1350}
8: Wahono.csv: machine: {'count': 1668, 'truepos': 50, 'falseneg': 9, 'correction': 13, 'unknownyes': 3, 'falsepos': 0, 'unique': 1080}
8: Wahono.csv: knee: {'count': 298, 'truepos': 22, 'falseneg': 3, 'correction': 4, 'unknownyes': 37, 'falsepos': 0, 'unique': 230}
8: Danijel.csv: none: {'count': 1470, 'truepos': 33, 'falseneg': 13, 'correction': 0, 'unknownyes': 2, 'falsepos': 2, 'unique': 1470}
8: Danijel.csv: three: {'count': 2825, 'truepos': 31, 'falseneg': 16, 'correction': 22, 'unknownyes': 1, 'falsepos': 0, 'unique': 1400}
8: Danijel.csv: machine: {'count': 1159, 'truepos': 42, 'falseneg': 3, 'correction': 16, 'unknownyes': 3, 'falsepos': 1, 'unique': 710}
8: Danijel.csv: knee: {'count': 378, 'truepos': 32, 'falseneg': 6, 'correction': 2, 'unknownyes': 10, 'falsepos': 3, 'unique': 280}
8: K_all3.csv: none: {'count': 550, 'truepos': 26, 'falseneg': 12, 'correction': 0, 'unknownyes': 7, 'falsepos': 6, 'unique': 550}
8: K_all3.csv: three: {'count': 1364, 'truepos': 30, 'falseneg': 10, 'correction': 21, 'unknownyes': 5, 'falsepos': 0, 'unique': 670}
8: K_all3.csv: machine: {'count': 718, 'truepos': 35, 'falseneg': 5, 'correction': 12, 'unknownyes': 5, 'falsepos': 4, 'unique': 400}
8: K_all3.csv: knee: 
------------------------------------------------------------
Sender: LSF System <lsfadmin@n2c2-12>
Subject: Job 640531: </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 8> in cluster <henry2> Exited

Job </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 8> was submitted from host <login01.hpc.ncsu.edu> by user <zyu9> in cluster <henry2> at Thu Feb  1 16:35:45 2018.
Job was executed on host(s) <2*n2c2-12>, in queue <single_chassis>, as user <zyu9> in cluster <henry2> at Thu Feb  1 16:35:51 2018.
</home/zyu9> was used as the home directory.
</home/zyu9/projects/MAR_HPC/Error/src> was used as the working directory.
Started at Thu Feb  1 16:35:51 2018.
Terminated at Thu Feb  1 17:54:20 2018.
Results reported at Thu Feb  1 17:54:20 2018.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
/share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 8
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   6150.45 sec.
    Max Memory :                                 280.96 MB
    Average Memory :                             226.29 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   1327 MB
    Max Processes :                              3
    Max Threads :                                8
    Run time :                                   4724 sec.
    Turnaround time :                            4715 sec.

The output (if any) is above this job summary.



PS: The stderr output (if any) follows:

Traceback (most recent call last):
  File "runner.py", line 1740, in <module>
    eval(cmd())
  File "<string>", line 1, in <module>
  File "runner.py", line 1682, in error_hpcc
    result = BM25(file,queries[file],'knee','random')
  File "runner.py", line 1215, in BM25
    seq = coded[np.argsort(read.body['time'][coded])]
TypeError: only integer scalar arrays can be converted to a scalar index


PS:

Fail to open stderr file ./err/8.err.640531: No such file or directory.
The stderr output is included in this report.

