30: Hall.csv: none: {'count': 620, 'truepos': 72, 'falseneg': 30, 'correction': 0, 'unknownyes': 2, 'falsepos': 6, 'unique': 620}
30: Hall.csv: three: {'count': 1876, 'truepos': 83, 'falseneg': 19, 'correction': 51, 'unknownyes': 2, 'falsepos': 0, 'unique': 910}
30: Hall.csv: machine: {'count': 823, 'truepos': 94, 'falseneg': 8, 'correction': 24, 'unknownyes': 2, 'falsepos': 1, 'unique': 600}
30: Hall.csv: knee: {'count': 664, 'truepos': 90, 'falseneg': 11, 'correction': 16, 'unknownyes': 3, 'falsepos': 1, 'unique': 440}
30: Wahono.csv: none: {'count': 1550, 'truepos': 33, 'falseneg': 26, 'correction': 0, 'unknownyes': 3, 'falsepos': 5, 'unique': 1550}
30: Wahono.csv: three: {'count': 3066, 'truepos': 46, 'falseneg': 14, 'correction': 21, 'unknownyes': 2, 'falsepos': 0, 'unique': 1520}
30: Wahono.csv: machine: {'count': 2434, 'truepos': 52, 'falseneg': 10, 'correction': 27, 'unknownyes': 0, 'falsepos': 3, 'unique': 1740}
30: Wahono.csv: knee: {'count': 942, 'truepos': 44, 'falseneg': 6, 'correction': 9, 'unknownyes': 12, 'falsepos': 3, 'unique': 550}
30: Danijel.csv: none: {'count': 1120, 'truepos': 35, 'falseneg': 11, 'correction': 0, 'unknownyes': 2, 'falsepos': 2, 'unique': 1120}
30: Danijel.csv: three: {'count': 2143, 'truepos': 36, 'falseneg': 10, 'correction': 19, 'unknownyes': 2, 'falsepos': 0, 'unique': 1060}
30: Danijel.csv: machine: {'count': 1666, 'truepos': 34, 'falseneg': 12, 'correction': 11, 'unknownyes': 2, 'falsepos': 0, 'unique': 1200}
30: Danijel.csv: knee: {'count': 472, 'truepos': 33, 'falseneg': 4, 'correction': 5, 'unknownyes': 11, 'falsepos': 0, 'unique': 280}
30: K_all3.csv: none: {'count': 450, 'truepos': 33, 'falseneg': 7, 'correction': 0, 'unknownyes': 5, 'falsepos': 5, 'unique': 450}
30: K_all3.csv: three: {'count': 1345, 'truepos': 35, 'falseneg': 9, 'correction': 24, 'unknownyes': 1, 'falsepos': 0, 'unique': 660}
30: K_all3.csv: machine: {'count': 551, 'truepos': 34, 'falseneg': 8, 'correction': 3, 'unknownyes': 3, 'falsepos': 4, 'unique': 410}
30: K_all3.csv: knee: 
------------------------------------------------------------
Sender: LSF System <lsfadmin@n2c3-6>
Subject: Job 760223: </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 30> in cluster <henry2> Exited

Job </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 30> was submitted from host <login01.hpc.ncsu.edu> by user <zyu9> in cluster <henry2> at Sun Feb 25 09:13:36 2018.
Job was executed on host(s) <2*n2c3-6>, in queue <single_chassis>, as user <zyu9> in cluster <henry2> at Sun Feb 25 09:13:42 2018.
</home/zyu9> was used as the home directory.
</home/zyu9/projects/MAR_HPC/Error/src> was used as the working directory.
Started at Sun Feb 25 09:13:42 2018.
Terminated at Sun Feb 25 10:13:07 2018.
Results reported at Sun Feb 25 10:13:07 2018.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
/share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 30
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   4575.73 sec.
    Max Memory :                                 287.99 MB
    Average Memory :                             233.39 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   1333 MB
    Max Processes :                              3
    Max Threads :                                8
    Run time :                                   3570 sec.
    Turnaround time :                            3571 sec.

The output (if any) is above this job summary.



PS: The stderr output (if any) follows:

Traceback (most recent call last):
  File "runner.py", line 352, in <module>
    eval(cmd())
  File "<string>", line 1, in <module>
  File "runner.py", line 292, in error_hpcc
    result = BM25(file,queries[file],'knee','random')
  File "runner.py", line 193, in BM25
    seq = coded[np.argsort(read.body['time'][coded])]
TypeError: only integer scalar arrays can be converted to a scalar index


PS:

Fail to open stderr file ./err/30.err.760223: No such file or directory.
The stderr output is included in this report.

