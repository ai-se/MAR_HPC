28: Hall.csv: none: {'count': 960, 'truepos': 76, 'falseneg': 27, 'correction': 0, 'unknownyes': 1, 'falsepos': 3, 'unique': 960}
28: Hall.csv: three: {'count': 1413, 'truepos': 76, 'falseneg': 26, 'correction': 43, 'unknownyes': 2, 'falsepos': 0, 'unique': 680}
28: Hall.csv: machine: {'count': 946, 'truepos': 93, 'falseneg': 9, 'correction': 30, 'unknownyes': 2, 'falsepos': 1, 'unique': 590}
28: Hall.csv: knee: {'count': 748, 'truepos': 85, 'falseneg': 17, 'correction': 24, 'unknownyes': 2, 'falsepos': 1, 'unique': 580}
28: Wahono.csv: none: {'count': 1520, 'truepos': 33, 'falseneg': 27, 'correction': 0, 'unknownyes': 2, 'falsepos': 5, 'unique': 1520}
28: Wahono.csv: three: {'count': 2867, 'truepos': 45, 'falseneg': 14, 'correction': 25, 'unknownyes': 3, 'falsepos': 0, 'unique': 1420}
28: Wahono.csv: machine: {'count': 1985, 'truepos': 50, 'falseneg': 10, 'correction': 12, 'unknownyes': 2, 'falsepos': 0, 'unique': 1400}
28: Wahono.csv: knee: {'count': 345, 'truepos': 22, 'falseneg': 2, 'correction': 8, 'unknownyes': 38, 'falsepos': 1, 'unique': 210}
28: Danijel.csv: none: {'count': 1040, 'truepos': 32, 'falseneg': 13, 'correction': 0, 'unknownyes': 3, 'falsepos': 1, 'unique': 1040}
28: Danijel.csv: three: {'count': 2869, 'truepos': 33, 'falseneg': 12, 'correction': 26, 'unknownyes': 3, 'falsepos': 0, 'unique': 1420}
28: Danijel.csv: machine: {'count': 1259, 'truepos': 41, 'falseneg': 4, 'correction': 10, 'unknownyes': 3, 'falsepos': 0, 'unique': 750}
28: Danijel.csv: knee: {'count': 495, 'truepos': 35, 'falseneg': 4, 'correction': 8, 'unknownyes': 9, 'falsepos': 0, 'unique': 310}
28: K_all3.csv: none: {'count': 790, 'truepos': 27, 'falseneg': 13, 'correction': 0, 'unknownyes': 5, 'falsepos': 4, 'unique': 790}
28: K_all3.csv: three: {'count': 1183, 'truepos': 31, 'falseneg': 8, 'correction': 20, 'unknownyes': 6, 'falsepos': 0, 'unique': 580}
28: K_all3.csv: machine: {'count': 787, 'truepos': 34, 'falseneg': 2, 'correction': 8, 'unknownyes': 9, 'falsepos': 4, 'unique': 460}
28: K_all3.csv: knee: 
------------------------------------------------------------
Sender: LSF System <lsfadmin@n2e1-12>
Subject: Job 640551: </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 28> in cluster <henry2> Exited

Job </share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 28> was submitted from host <login01.hpc.ncsu.edu> by user <zyu9> in cluster <henry2> at Thu Feb  1 16:35:46 2018.
Job was executed on host(s) <2*n2e1-12>, in queue <single_chassis>, as user <zyu9> in cluster <henry2> at Thu Feb  1 16:35:51 2018.
</home/zyu9> was used as the home directory.
</home/zyu9/projects/MAR_HPC/Error/src> was used as the working directory.
Started at Thu Feb  1 16:35:51 2018.
Terminated at Thu Feb  1 17:48:51 2018.
Results reported at Thu Feb  1 17:48:51 2018.

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
/share/tjmenzie/zyu9/miniconda2/bin/python2.7 runner.py error_hpcc 28
------------------------------------------------------------

Exited with exit code 1.

Resource usage summary:

    CPU time :                                   5218.41 sec.
    Max Memory :                                 281.36 MB
    Average Memory :                             228.37 MB
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   1308 MB
    Max Processes :                              3
    Max Threads :                                8
    Run time :                                   4395 sec.
    Turnaround time :                            4385 sec.

The output (if any) is above this job summary.



PS: The stderr output (if any) follows:

Traceback (most recent call last):
  File "runner.py", line 1740, in <module>
    eval(cmd())
  File "<string>", line 1, in <module>
  File "runner.py", line 1682, in error_hpcc
    result = BM25(file,queries[file],'knee','random')
  File "runner.py", line 1215, in BM25
    seq = coded[np.argsort(read.body['time'][coded])]
TypeError: only integer scalar arrays can be converted to a scalar index


PS:

Fail to open stderr file ./err/28.err.640551: No such file or directory.
The stderr output is included in this report.

